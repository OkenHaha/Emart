# Generated by Django 3.2.12 on 2022-04-22 15:41

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_extensions.db.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='product_add',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Post_Date', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('Product_Name', models.CharField(max_length=40)),
                ('Product_Category', models.CharField(choices=[('1', 'Industerial Plant,Machinery,Equipment'), ('2', 'Consumer Electronics and House Hold Equipment'), ('3', 'Packaging Material suplies and machinery'), ('4', 'Industrial and Enginearing Products sparce '), ('5', 'Building Construct Material, Equipment,Civill Enginearing and Real Estate'), ('6', 'Apperal Clothings and Germent '), ('7', 'Vagitable,Fruits, Grain,Dairy Products and other Grosery Products'), ('8', 'Hospital Equipment'), ('9', 'Cemical Dyes and Allied Products'), ('10', 'Macanical Component or Parts '), ('11', 'Scientific,Measuring, Laboratory Products'), ('12', 'Furniture,Furniture Suplies,Furniture Hardware'), ('13', 'Ayurvedic and Herbal Products  '), ('14', 'Sequrity Devices,Safety System and Sequrity Services'), ('15', ' Sports Goods,Games,Toys ,Accessories'), ('16', 'Telecom Products Equipement and Supplies '), ('17', ' Stationary and Paper Products '), ('18', ' Bags,Belts ,Wallets and Accesories '), ('19', 'Stone Marble and Granite Suplies  '), ('20', 'Trade Event Organiser,Event Planner  '), ('21', 'Fertilisers,seeds,plant, Agro Machines'), ('22', 'Polatry and Animal Husbendry  '), ('23', 'Automobile Spare Parts and Accessories'), ('24', 'Computer Softwar,IT Support and Solutions '), ('25', 'Tool,mashine Tool ')], max_length=500)),
                ('Product_Price', models.CharField(max_length=500)),
                ('Product_Img', models.ImageField(upload_to='product_img/')),
                ('Phone_No', models.IntegerField(blank=True, null=True)),
                ('Views', models.IntegerField(default=0)),
                ('Email', models.EmailField(max_length=100)),
                ('Gst_No', models.CharField(blank=True, max_length=500, null=True)),
                ('Company_Name', models.CharField(blank=True, max_length=100, null=True)),
                ('Registration_Number', models.CharField(blank=True, max_length=500, null=True)),
                ('Founded_Year', models.CharField(blank=True, max_length=100, null=True)),
                ('Workers_Company', models.IntegerField(blank=True, null=True)),
                ('Company_Img', models.ImageField(blank=True, null=True, upload_to='image/')),
                ('Company_Founder', models.CharField(blank=True, max_length=30, null=True)),
                ('Company_Ceos', models.CharField(blank=True, max_length=300, null=True)),
                ('Address', models.CharField(max_length=40)),
                ('Company_Logo', models.ImageField(upload_to='image/')),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, default=None, editable=False, null=True, populate_from=['Product_Name', 'Company_Name', 'Gst_No'], unique=True)),
                ('Youtube_Video_URL', models.URLField(max_length=4000)),
                ('Product_Discription', models.TextField(max_length=1000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='product_enquiry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, editable=False, populate_from=['Product_Name', 'Email'])),
                ('Post_Date', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('Product_Name', models.CharField(max_length=3000)),
                ('Name', models.CharField(max_length=200)),
                ('Email', models.EmailField(max_length=200)),
                ('Comp_Name', models.CharField(max_length=200)),
                ('Discription', models.TextField(max_length=2000)),
                ('Mobile_No', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='requirement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Product_Name', models.CharField(max_length=200)),
                ('Post_Date', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('Name', models.CharField(max_length=200)),
                ('Email', models.EmailField(max_length=200)),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, editable=False, populate_from='Email')),
                ('Comp_Name', models.CharField(max_length=200)),
                ('Mobile_No', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='shiping_enquiry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, editable=False, populate_from=['Product_Name', 'Email'])),
                ('Post_Date', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('Product_Name', models.CharField(max_length=200)),
                ('Carry_Load', models.IntegerField()),
                ('Name', models.CharField(max_length=200)),
                ('Email', models.EmailField(max_length=200)),
                ('Comp_Name', models.CharField(max_length=200)),
                ('Discription', models.TextField(max_length=1000)),
                ('Mobile_No', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='UserVisit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now, help_text='The time at which the first visit of the day was recorded')),
                ('session_key', models.CharField(help_text='Django session identifier', max_length=40)),
                ('remote_addr', models.CharField(blank=True, help_text='Client IP address (from X-Forwarded-For HTTP header, or REMOTE_ADDR request property)', max_length=100)),
                ('ua_string', models.TextField(blank=True, help_text='Client User-Agent HTTP header', verbose_name='User agent (raw)')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('hash', models.CharField(help_text='MD5 hash generated from request properties', max_length=32)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='The time at which the database record was created (!=timestamp)')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_visits', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'get_latest_by': 'timestamp',
            },
        ),
        migrations.CreateModel(
            name='userprofile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('User_Stetus', models.CharField(blank=True, max_length=30, null=True)),
                ('User_Bio', models.CharField(blank=True, max_length=100, null=True)),
                ('User_Location', models.CharField(blank=True, max_length=100, null=True)),
                ('User_Company', models.CharField(blank=True, max_length=100, null=True)),
                ('User_Website', models.CharField(blank=True, max_length=100, null=True)),
                ('User_Twitter', models.CharField(blank=True, max_length=100, null=True)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='userprofile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='manager_account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(blank=True, max_length=100, null=True)),
                ('Email', models.EmailField(blank=True, max_length=100, null=True)),
                ('Phone_No', models.IntegerField(blank=True, null=True)),
                ('Gst_No', models.CharField(blank=True, max_length=500, null=True)),
                ('Company_Name', models.CharField(blank=True, max_length=100, null=True)),
                ('Registration_Number', models.CharField(blank=True, max_length=500, null=True)),
                ('Founded_Year', models.CharField(blank=True, max_length=100, null=True)),
                ('Workers_Company', models.IntegerField()),
                ('Company_Img', models.ImageField(blank=True, null=True, upload_to='image/')),
                ('Company_Founder', models.CharField(blank=True, default=None, max_length=30, null=True)),
                ('Company_Ceos', models.CharField(blank=True, default=None, max_length=300, null=True)),
                ('Address', models.CharField(blank=True, default=None, max_length=40, null=True)),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, default=None, editable=False, null=True, populate_from=['user', 'Name', 'Email'], unique=True)),
                ('Company_Logo', models.ImageField(blank=True, default=None, null=True, upload_to='image/')),
                ('Discription', models.TextField(blank=True, default=None, null=True)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='manager_account', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
